# MIT Licence, (c) Michael Feil, adapted from Casper Hansen's aws wheels
# https://github.com/casper-hansen/AutoAWQ/tree/main/.github/workflows

name: Build FlashMM Wheels with CUDA

on:
  push:
    # push on github tags that start with "wheel"
    tags:
      - "wheel*"

jobs:

  build_wheels:
    name: Build FlashMM Wheels
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-latest]
        pyver: ["3.8", "3.9", "3.10", "3.11"]
        cuda: ["11.8.0", "12.1.1"]
    defaults:
      run:
        shell: pwsh
    env:
      CUDA_VERSION: ${{ matrix.cuda }}
    
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@v1.3.0
        if: runner.os == 'Linux'
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false
        
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.pyver }}

      - name: Setup Mamba
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          activate-environment: "build"
          python-version: ${{ matrix.pyver }}
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          add-pip-as-python-dependency: true
          auto-activate-base: false
          
      - name: Install Dependencies
        run: |
          # Install CUDA toolkit
          mamba install -y 'cuda' -c "nvidia/label/cuda-${env:CUDA_VERSION}"

          # Env variables
          $env:CUDA_PATH = $env:CONDA_PREFIX
          $env:CUDA_HOME = $env:CONDA_PREFIX
          
          # Install torch
          $cudaVersion = $env:CUDA_VERSION.Replace('.', '')
          $cudaVersionPytorch = $cudaVersion.Substring(0, $cudaVersion.Length - 1)
          if ([int]$cudaVersionPytorch -gt 118) { $pytorchVersion = "torch==2.1.0" } else {$pytorchVersion = "torch==2.0.1"}
          python -m pip install --upgrade --no-cache-dir $pytorchVersion+cu$cudaVersionPytorch --index-url https://download.pytorch.org/whl/cu$cudaVersionPytorch
          python -m pip install build setuptools wheel ninja

          # Print version information
          python --version
          python -c "import torch; print('PyTorch:', torch.__version__)"
          python -c "import torch; print('CUDA:', torch.version.cuda)"
          python -c "import os; print('CUDA_HOME:', os.getenv('CUDA_HOME', None))"
          python -c "from torch.utils import cpp_extension; print (cpp_extension.CUDA_HOME)"

      - name: Build Wheel
        run: |
          $env:CUDA_PATH = $env:CONDA_PREFIX
          $env:CUDA_HOME = $env:CONDA_PREFIX

          # build the wheel
          cd csrc/flashmm
          python setup.py sdist bdist_wheel 

          # rename wheel to reflect cuda version and torch version bash: dist/*.whl
          python ../../.github/workflows/scripts/rename_whl_with_torch_version.py        
      
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./csrc/flashmm/dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
